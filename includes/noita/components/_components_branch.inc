else if (componentName == "AIAttackComponent") {
    out.emplace<components::AIAttackComponent>(components::AIAttackComponent{});
}
else if (componentName == "AIComponent") {
    out.emplace<components::AIComponent>(components::AIComponent{});
}
else if (componentName == "AbilityComponent") {
    out.emplace<components::AbilityComponent>(components::AbilityComponent{});
}
else if (componentName == "AdvancedFishAIComponent") {
    out.emplace<components::AdvancedFishAIComponent>(components::AdvancedFishAIComponent{});
}
else if (componentName == "AltarComponent") {
    out.emplace<components::AltarComponent>(components::AltarComponent{});
}
else if (componentName == "AnimalAIComponent") {
    out.emplace<components::AnimalAIComponent>(components::AnimalAIComponent{});
}
else if (componentName == "ArcComponent") {
    out.emplace<components::ArcComponent>(components::ArcComponent{});
}
else if (componentName == "AreaDamageComponent") {
    out.emplace<components::AreaDamageComponent>(components::AreaDamageComponent{});
}
else if (componentName == "AttachToEntityComponent") {
    out.emplace<components::AttachToEntityComponent>(components::AttachToEntityComponent{});
}
else if (componentName == "AudioComponent") {
    out.emplace<components::AudioComponent>(components::AudioComponent{});
}
else if (componentName == "AudioListenerComponent") {
    out.emplace<components::AudioListenerComponent>(components::AudioListenerComponent{});
}
else if (componentName == "AudioLoopComponent") {
    out.emplace<components::AudioLoopComponent>(components::AudioLoopComponent{});
}
else if (componentName == "BiomeTrackerComponent") {
    out.emplace<components::BiomeTrackerComponent>(components::BiomeTrackerComponent{});
}
else if (componentName == "BlackHoleComponent") {
    out.emplace<components::BlackHoleComponent>(components::BlackHoleComponent{});
}
else if (componentName == "BookComponent") {
    out.emplace<components::BookComponent>(components::BookComponent{});
}
else if (componentName == "BossDragonComponent") {
    out.emplace<components::BossDragonComponent>(components::BossDragonComponent{});
}
else if (componentName == "BossHealthBarComponent") {
    out.emplace<components::BossHealthBarComponent>(components::BossHealthBarComponent{});
}
else if (componentName == "CameraBoundComponent") {
    out.emplace<components::CameraBoundComponent>(components::CameraBoundComponent{});
}
else if (componentName == "CardinalMovementComponent") {
    out.emplace<components::CardinalMovementComponent>(components::CardinalMovementComponent{});
}
else if (componentName == "CellEaterComponent") {
    out.emplace<components::CellEaterComponent>(components::CellEaterComponent{});
}
else if (componentName == "CharacterCollisionComponent") {
    out.emplace<components::CharacterCollisionComponent>(components::CharacterCollisionComponent{});
}
else if (componentName == "CharacterDataComponent") {
    out.emplace<components::CharacterDataComponent>(components::CharacterDataComponent{});
}
else if (componentName == "CharacterPlatformingComponent") {
    out.emplace<components::CharacterPlatformingComponent>(components::CharacterPlatformingComponent{});
}
else if (componentName == "CharacterStatsComponent") {
    out.emplace<components::CharacterStatsComponent>(components::CharacterStatsComponent{});
}
else if (componentName == "CollisionTriggerComponent") {
    out.emplace<components::CollisionTriggerComponent>(components::CollisionTriggerComponent{});
}
else if (componentName == "ConsumableTeleportComponent") {
    out.emplace<components::ConsumableTeleportComponent>(components::ConsumableTeleportComponent{});
}
else if (componentName == "ControllerGoombaAIComponent") {
    out.emplace<components::ControllerGoombaAIComponent>(components::ControllerGoombaAIComponent{});
}
else if (componentName == "ControlsComponent") {
    out.emplace<components::ControlsComponent>(components::ControlsComponent{});
}
else if (componentName == "CrawlerAnimalComponent") {
    out.emplace<components::CrawlerAnimalComponent>(components::CrawlerAnimalComponent{});
}
else if (componentName == "CutThroughWorldDoneHereComponent") {
    out.emplace<components::CutThroughWorldDoneHereComponent>(components::CutThroughWorldDoneHereComponent{});
}
else if (componentName == "DamageModelComponent") {
    out.emplace<components::DamageModelComponent>(components::DamageModelComponent{});
}
else if (componentName == "DamageNearbyEntitiesComponent") {
    out.emplace<components::DamageNearbyEntitiesComponent>(components::DamageNearbyEntitiesComponent{});
}
else if (componentName == "DebugFollowMouseComponent") {
    out.emplace<components::DebugFollowMouseComponent>(components::DebugFollowMouseComponent{});
}
else if (componentName == "DebugLogMessagesComponent") {
    out.emplace<components::DebugLogMessagesComponent>(components::DebugLogMessagesComponent{});
}
else if (componentName == "DebugSpatialVisualizerComponent") {
    out.emplace<components::DebugSpatialVisualizerComponent>(components::DebugSpatialVisualizerComponent{});
}
else if (componentName == "DieIfSpeedBelowComponent") {
    out.emplace<components::DieIfSpeedBelowComponent>(components::DieIfSpeedBelowComponent{});
}
else if (componentName == "DroneLauncherComponent") {
    out.emplace<components::DroneLauncherComponent>(components::DroneLauncherComponent{});
}
else if (componentName == "DrugEffectComponent") {
    out.emplace<components::DrugEffectComponent>(components::DrugEffectComponent{});
}
else if (componentName == "DrugEffectModifierComponent") {
    out.emplace<components::DrugEffectModifierComponent>(components::DrugEffectModifierComponent{});
}
else if (componentName == "ElectricChargeComponent") {
    out.emplace<components::ElectricChargeComponent>(components::ElectricChargeComponent{});
}
else if (componentName == "ElectricityComponent") {
    out.emplace<components::ElectricityComponent>(components::ElectricityComponent{});
}
else if (componentName == "ElectricityReceiverComponent") {
    out.emplace<components::ElectricityReceiverComponent>(components::ElectricityReceiverComponent{});
}
else if (componentName == "ElectricitySourceComponent") {
    out.emplace<components::ElectricitySourceComponent>(components::ElectricitySourceComponent{});
}
else if (componentName == "EndingMcGuffinComponent") {
    out.emplace<components::EndingMcGuffinComponent>(components::EndingMcGuffinComponent{});
}
else if (componentName == "EnergyShieldComponent") {
    out.emplace<components::EnergyShieldComponent>(components::EnergyShieldComponent{});
}
else if (componentName == "ExplodeOnDamageComponent") {
    out.emplace<components::ExplodeOnDamageComponent>(components::ExplodeOnDamageComponent{});
}
else if (componentName == "ExplosionComponent") {
    out.emplace<components::ExplosionComponent>(components::ExplosionComponent{});
}
else if (componentName == "FishAIComponent") {
    out.emplace<components::FishAIComponent>(components::FishAIComponent{});
}
else if (componentName == "FlyingComponent") {
    out.emplace<components::FlyingComponent>(components::FlyingComponent{});
}
else if (componentName == "FogOfWarRadiusComponent") {
    out.emplace<components::FogOfWarRadiusComponent>(components::FogOfWarRadiusComponent{});
}
else if (componentName == "FogOfWarRemoverComponent") {
    out.emplace<components::FogOfWarRemoverComponent>(components::FogOfWarRemoverComponent{});
}
else if (componentName == "GameAreaEffectComponent") {
    out.emplace<components::GameAreaEffectComponent>(components::GameAreaEffectComponent{});
}
else if (componentName == "GameEffectComponent") {
    out.emplace<components::GameEffectComponent>(components::GameEffectComponent{});
}
else if (componentName == "GameLogComponent") {
    out.emplace<components::GameLogComponent>(components::GameLogComponent{});
}
else if (componentName == "GameStatsComponent") {
    out.emplace<components::GameStatsComponent>(components::GameStatsComponent{});
}
else if (componentName == "GasBubbleComponent") {
    out.emplace<components::GasBubbleComponent>(components::GasBubbleComponent{});
}
else if (componentName == "GenomeDataComponent") {
    out.emplace<components::GenomeDataComponent>(components::GenomeDataComponent{});
}
else if (componentName == "GhostComponent") {
    out.emplace<components::GhostComponent>(components::GhostComponent{});
}
else if (componentName == "GodInfoComponent") {
    out.emplace<components::GodInfoComponent>(components::GodInfoComponent{});
}
else if (componentName == "GunComponent") {
    out.emplace<components::GunComponent>(components::GunComponent{});
}
else if (componentName == "HealthBarComponent") {
    out.emplace<components::HealthBarComponent>(components::HealthBarComponent{});
}
else if (componentName == "HitEffectComponent") {
    out.emplace<components::HitEffectComponent>(components::HitEffectComponent{});
}
else if (componentName == "HitboxComponent") {
    out.emplace<components::HitboxComponent>(components::HitboxComponent{});
}
else if (componentName == "HomingComponent") {
    out.emplace<components::HomingComponent>(components::HomingComponent{});
}
else if (componentName == "HotspotComponent") {
    out.emplace<components::HotspotComponent>(components::HotspotComponent{});
}
else if (componentName == "IKLimbAttackerComponent") {
    out.emplace<components::IKLimbAttackerComponent>(components::IKLimbAttackerComponent{});
}
else if (componentName == "IKLimbComponent") {
    out.emplace<components::IKLimbComponent>(components::IKLimbComponent{});
}
else if (componentName == "IKLimbWalkerComponent") {
    out.emplace<components::IKLimbWalkerComponent>(components::IKLimbWalkerComponent{});
}
else if (componentName == "IKLimbsAnimatorComponent") {
    out.emplace<components::IKLimbsAnimatorComponent>(components::IKLimbsAnimatorComponent{});
}
else if (componentName == "IngestionComponent") {
    out.emplace<components::IngestionComponent>(components::IngestionComponent{});
}
else if (componentName == "InheritTransformComponent") {
    out.emplace<components::InheritTransformComponent>(components::InheritTransformComponent{});
}
else if (componentName == "InteractableComponent") {
    out.emplace<components::InteractableComponent>(components::InteractableComponent{});
}
else if (componentName == "Inventory2Component") {
    out.emplace<components::Inventory2Component>(components::Inventory2Component{});
}
else if (componentName == "InventoryComponent") {
    out.emplace<components::InventoryComponent>(components::InventoryComponent{});
}
else if (componentName == "InventoryGuiComponent") {
    out.emplace<components::InventoryGuiComponent>(components::InventoryGuiComponent{});
}
else if (componentName == "ItemAIKnowledgeComponent") {
    out.emplace<components::ItemAIKnowledgeComponent>(components::ItemAIKnowledgeComponent{});
}
else if (componentName == "ItemActionComponent") {
    out.emplace<components::ItemActionComponent>(components::ItemActionComponent{});
}
else if (componentName == "ItemAlchemyComponent") {
    out.emplace<components::ItemAlchemyComponent>(components::ItemAlchemyComponent{});
}
else if (componentName == "ItemChestComponent") {
    out.emplace<components::ItemChestComponent>(components::ItemChestComponent{});
}
else if (componentName == "ItemComponent") {
    out.emplace<components::ItemComponent>(components::ItemComponent{});
}
else if (componentName == "ItemCostComponent") {
    out.emplace<components::ItemCostComponent>(components::ItemCostComponent{});
}
else if (componentName == "ItemPickUpperComponent") {
    out.emplace<components::ItemPickUpperComponent>(components::ItemPickUpperComponent{});
}
else if (componentName == "ItemRechargeNearGroundComponent") {
    out.emplace<components::ItemRechargeNearGroundComponent>(components::ItemRechargeNearGroundComponent{});
}
else if (componentName == "ItemStashComponent") {
    out.emplace<components::ItemStashComponent>(components::ItemStashComponent{});
}
else if (componentName == "KickComponent") {
    out.emplace<components::KickComponent>(components::KickComponent{});
}
else if (componentName == "LaserEmitterComponent") {
    out.emplace<components::LaserEmitterComponent>(components::LaserEmitterComponent{});
}
else if (componentName == "LevitationComponent") {
    out.emplace<components::LevitationComponent>(components::LevitationComponent{});
}
else if (componentName == "LifetimeComponent") {
    out.emplace<components::LifetimeComponent>(components::LifetimeComponent{});
}
else if (componentName == "LightComponent") {
    out.emplace<components::LightComponent>(components::LightComponent{});
}
else if (componentName == "LightningComponent") {
    out.emplace<components::LightningComponent>(components::LightningComponent{});
}
else if (componentName == "LimbBossComponent") {
    out.emplace<components::LimbBossComponent>(components::LimbBossComponent{});
}
else if (componentName == "LiquidDisplacerComponent") {
    out.emplace<components::LiquidDisplacerComponent>(components::LiquidDisplacerComponent{});
}
else if (componentName == "LoadEntitiesComponent") {
    out.emplace<components::LoadEntitiesComponent>(components::LoadEntitiesComponent{});
}
else if (componentName == "LocationMarkerComponent") {
    out.emplace<components::LocationMarkerComponent>(components::LocationMarkerComponent{});
}
else if (componentName == "LooseGroundComponent") {
    out.emplace<components::LooseGroundComponent>(components::LooseGroundComponent{});
}
else if (componentName == "LuaComponent") {
    out.emplace<components::LuaComponent>(components::LuaComponent{});
}
else if (componentName == "MagicConvertMaterialComponent") {
    out.emplace<components::MagicConvertMaterialComponent>(components::MagicConvertMaterialComponent{});
}
else if (componentName == "MagicXRayComponent") {
    out.emplace<components::MagicXRayComponent>(components::MagicXRayComponent{});
}
else if (componentName == "ManaReloaderComponent") {
    out.emplace<components::ManaReloaderComponent>(components::ManaReloaderComponent{});
}
else if (componentName == "MaterialAreaCheckerComponent") {
    out.emplace<components::MaterialAreaCheckerComponent>(components::MaterialAreaCheckerComponent{});
}
else if (componentName == "MaterialInventoryComponent") {
    out.emplace<components::MaterialInventoryComponent>(components::MaterialInventoryComponent{});
}
else if (componentName == "MaterialSeaSpawnerComponent") {
    out.emplace<components::MaterialSeaSpawnerComponent>(components::MaterialSeaSpawnerComponent{});
}
else if (componentName == "MaterialSuckerComponent") {
    out.emplace<components::MaterialSuckerComponent>(components::MaterialSuckerComponent{});
}
else if (componentName == "MoveToSurfaceOnCreateComponent") {
    out.emplace<components::MoveToSurfaceOnCreateComponent>(components::MoveToSurfaceOnCreateComponent{});
}
else if (componentName == "MusicEnergyAffectorComponent") {
    out.emplace<components::MusicEnergyAffectorComponent>(components::MusicEnergyAffectorComponent{});
}
else if (componentName == "NinjaRopeComponent") {
    out.emplace<components::NinjaRopeComponent>(components::NinjaRopeComponent{});
}
else if (componentName == "NullDamageComponent") {
    out.emplace<components::NullDamageComponent>(components::NullDamageComponent{});
}
else if (componentName == "OrbComponent") {
    out.emplace<components::OrbComponent>(components::OrbComponent{});
}
else if (componentName == "ParticleEmitterComponent") {
    out.emplace<components::ParticleEmitterComponent>(components::ParticleEmitterComponent{});
}
else if (componentName == "PathFindingComponent") {
    out.emplace<components::PathFindingComponent>(components::PathFindingComponent{});
}
else if (componentName == "PathFindingGridMarkerComponent") {
    out.emplace<components::PathFindingGridMarkerComponent>(components::PathFindingGridMarkerComponent{});
}
else if (componentName == "PhysicsAIComponent") {
    out.emplace<components::PhysicsAIComponent>(components::PhysicsAIComponent{});
}
else if (componentName == "PhysicsBody2Component") {
    out.emplace<components::PhysicsBody2Component>(components::PhysicsBody2Component{});
}
else if (componentName == "PhysicsBodyCollisionDamageComponent") {
    out.emplace<components::PhysicsBodyCollisionDamageComponent>(components::PhysicsBodyCollisionDamageComponent{});
}
else if (componentName == "PhysicsBodyComponent") {
    out.emplace<components::PhysicsBodyComponent>(components::PhysicsBodyComponent{});
}
else if (componentName == "PhysicsImageShapeComponent") {
    out.emplace<components::PhysicsImageShapeComponent>(components::PhysicsImageShapeComponent{});
}
else if (componentName == "PhysicsJoint2Component") {
    out.emplace<components::PhysicsJoint2Component>(components::PhysicsJoint2Component{});
}
else if (componentName == "PhysicsJoint2MutatorComponent") {
    out.emplace<components::PhysicsJoint2MutatorComponent>(components::PhysicsJoint2MutatorComponent{});
}
else if (componentName == "PhysicsJointComponent") {
    out.emplace<components::PhysicsJointComponent>(components::PhysicsJointComponent{});
}
else if (componentName == "PhysicsKeepInWorldComponent") {
    out.emplace<components::PhysicsKeepInWorldComponent>(components::PhysicsKeepInWorldComponent{});
}
else if (componentName == "PhysicsPickUpComponent") {
    out.emplace<components::PhysicsPickUpComponent>(components::PhysicsPickUpComponent{});
}
else if (componentName == "PhysicsRagdollComponent") {
    out.emplace<components::PhysicsRagdollComponent>(components::PhysicsRagdollComponent{});
}
else if (componentName == "PhysicsShapeComponent") {
    out.emplace<components::PhysicsShapeComponent>(components::PhysicsShapeComponent{});
}
else if (componentName == "PhysicsThrowableComponent") {
    out.emplace<components::PhysicsThrowableComponent>(components::PhysicsThrowableComponent{});
}
else if (componentName == "PixelSceneComponent") {
    out.emplace<components::PixelSceneComponent>(components::PixelSceneComponent{});
}
else if (componentName == "PixelSpriteComponent") {
    out.emplace<components::PixelSpriteComponent>(components::PixelSpriteComponent{});
}
else if (componentName == "PlatformShooterPlayerComponent") {
    out.emplace<components::PlatformShooterPlayerComponent>(components::PlatformShooterPlayerComponent{});
}
else if (componentName == "PlayerCollisionComponent") {
    out.emplace<components::PlayerCollisionComponent>(components::PlayerCollisionComponent{});
}
else if (componentName == "PlayerStatsComponent") {
    out.emplace<components::PlayerStatsComponent>(components::PlayerStatsComponent{});
}
else if (componentName == "PositionSeedComponent") {
    out.emplace<components::PositionSeedComponent>(components::PositionSeedComponent{});
}
else if (componentName == "PotionComponent") {
    out.emplace<components::PotionComponent>(components::PotionComponent{});
}
else if (componentName == "PressurePlateComponent") {
    out.emplace<components::PressurePlateComponent>(components::PressurePlateComponent{});
}
else if (componentName == "ProjectileComponent") {
    out.emplace<components::ProjectileComponent>(components::ProjectileComponent{});
}
else if (componentName == "RotateTowardsComponent") {
    out.emplace<components::RotateTowardsComponent>(components::RotateTowardsComponent{});
}
else if (componentName == "SetLightAlphaFromVelocityComponent") {
    out.emplace<components::SetLightAlphaFromVelocityComponent>(components::SetLightAlphaFromVelocityComponent{});
}
else if (componentName == "SetStartVelocityComponent") {
    out.emplace<components::SetStartVelocityComponent>(components::SetStartVelocityComponent{});
}
else if (componentName == "ShotEffectComponent") {
    out.emplace<components::ShotEffectComponent>(components::ShotEffectComponent{});
}
else if (componentName == "SimplePhysicsComponent") {
    out.emplace<components::SimplePhysicsComponent>(components::SimplePhysicsComponent{});
}
else if (componentName == "SineWaveComponent") {
    out.emplace<components::SineWaveComponent>(components::SineWaveComponent{});
}
else if (componentName == "SpriteAnimatorComponent") {
    out.emplace<components::SpriteAnimatorComponent>(components::SpriteAnimatorComponent{});
}
else if (componentName == "SpriteComponent") {
    out.emplace<components::SpriteComponent>(components::SpriteComponent{});
}
else if (componentName == "SpriteOffsetAnimatorComponent") {
    out.emplace<components::SpriteOffsetAnimatorComponent>(components::SpriteOffsetAnimatorComponent{});
}
else if (componentName == "SpriteParticleEmitterComponent") {
    out.emplace<components::SpriteParticleEmitterComponent>(components::SpriteParticleEmitterComponent{});
}
else if (componentName == "SpriteStainsComponent") {
    out.emplace<components::SpriteStainsComponent>(components::SpriteStainsComponent{});
}
else if (componentName == "StatusEffectDataComponent") {
    out.emplace<components::StatusEffectDataComponent>(components::StatusEffectDataComponent{});
}
else if (componentName == "StreamingKeepAliveComponent") {
    out.emplace<components::StreamingKeepAliveComponent>(components::StreamingKeepAliveComponent{});
}
else if (componentName == "TelekinesisComponent") {
    out.emplace<components::TelekinesisComponent>(components::TelekinesisComponent{});
}
else if (componentName == "TeleportComponent") {
    out.emplace<components::TeleportComponent>(components::TeleportComponent{});
}
else if (componentName == "TeleportProjectileComponent") {
    out.emplace<components::TeleportProjectileComponent>(components::TeleportProjectileComponent{});
}
else if (componentName == "TextLogComponent") {
    out.emplace<components::TextLogComponent>(components::TextLogComponent{});
}
else if (componentName == "TorchComponent") {
    out.emplace<components::TorchComponent>(components::TorchComponent{});
}
else if (componentName == "UIIconComponent") {
    out.emplace<components::UIIconComponent>(components::UIIconComponent{});
}
else if (componentName == "UIInfoComponent") {
    out.emplace<components::UIInfoComponent>(components::UIInfoComponent{});
}
else if (componentName == "VariableStorageComponent") {
    out.emplace<components::VariableStorageComponent>(components::VariableStorageComponent{});
}
else if (componentName == "VelocityComponent") {
    out.emplace<components::VelocityComponent>(components::VelocityComponent{});
}
else if (componentName == "VerletPhysicsComponent") {
    out.emplace<components::VerletPhysicsComponent>(components::VerletPhysicsComponent{});
}
else if (componentName == "VerletWeaponComponent") {
    out.emplace<components::VerletWeaponComponent>(components::VerletWeaponComponent{});
}
else if (componentName == "VerletWorldJointComponent") {
    out.emplace<components::VerletWorldJointComponent>(components::VerletWorldJointComponent{});
}
else if (componentName == "WalletComponent") {
    out.emplace<components::WalletComponent>(components::WalletComponent{});
}
else if (componentName == "WalletValuableComponent") {
    out.emplace<components::WalletValuableComponent>(components::WalletValuableComponent{});
}
else if (componentName == "WorldStateComponent") {
    out.emplace<components::WorldStateComponent>(components::WorldStateComponent{});
}
else if (componentName == "WormAIComponent") {
    out.emplace<components::WormAIComponent>(components::WormAIComponent{});
}
else if (componentName == "WormAttractorComponent") {
    out.emplace<components::WormAttractorComponent>(components::WormAttractorComponent{});
}
else if (componentName == "WormComponent") {
    out.emplace<components::WormComponent>(components::WormComponent{});
}
else if (componentName == "WormPlayerComponent") {
    out.emplace<components::WormPlayerComponent>(components::WormPlayerComponent{});
}
